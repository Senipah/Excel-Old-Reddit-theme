// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

@use "../theme/reddit-dark" as dark;
@use "../theme/reddit-light" as light;

@mixin themeProperty(
  $theme,
  $property,
  $color,
  $additionalPropertiesPositionIsFront,
  $additionalProperties
) {
  @if $additionalPropertiesPositionIsFront {
    #{$property}: unquote(
      $additionalProperties + " " + map-get($theme, $color)
    );
  } @else {
    #{$property}: unquote(
      map-get($theme, $color) + " " + $additionalProperties
    );
  }
}

// use like: @include theme('color', $secondary-text-color);

@mixin theme(
  $property,
  $color,
  $forceDark: false,
  $additionalPropertiesPositionIsFront: false,
  $additionalProperties: ""
) {
  @if $forceDark {
    @include themeProperty(
      dark.$theme,
      $property,
      $color,
      $additionalPropertiesPositionIsFront,
      $additionalProperties
    );
  } @else {
    @include themeProperty(
      light.$theme,
      $property,
      $color,
      $additionalPropertiesPositionIsFront,
      $additionalProperties
    );

    @media (prefers-color-scheme: dark) {
      @include themeProperty(
        dark.$theme,
        $property,
        $color,
        $additionalPropertiesPositionIsFront,
        $additionalProperties
      );
    }
  }
}

@mixin stroke($color, $shadow: 0px) {
  $val: map-get(light.$theme, $color);
  $size: 1px;
  $blur: 0;
  text-shadow: $shadow $shadow $blur $val, $size * -1 $size * -1 $blur $val,
    $size $size * -1 $blur $val, $size * -1 $size $blur $val,
    $size $size $blur $val;
  @media (prefers-color-scheme: dark) {
    $val: map-get(dark.$theme, $color);
    text-shadow: $shadow $shadow $blur $val, $size * -1 $size * -1 $blur $val,
      $size $size * -1 $blur $val, $size * -1 $size $blur $val,
      $size $size $blur $val;
  }
}
